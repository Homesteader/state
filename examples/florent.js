"use strict";
exports.__esModule = true;
//import * as state from "@steelbreeze/state";
var state = require("../lib/node");
state.log.add(function (message) { return console.info(message); }, state.log.Entry | state.log.Exit);
var model = new state.State("model");
var initial = new state.PseudoState("initial", model, state.PseudoStateKind.Initial);
var on = new state.State("on", model);
var off = new state.State("off", model);
var clean = new state.State("clean", model);
var final = new state.State("final", model);
var history = new state.PseudoState("history", on, state.PseudoStateKind.ShallowHistory);
var idle = new state.State("idle", on);
var moveItem = new state.State("moveItem", on);
var showMoveItemPattern = new state.State("showMoveItemPattern", on);
var hideMoveItemPattern = new state.State("hideMoveItemPattern", on);
initial.to(idle);
on.on(String).when(function (trigger) { return trigger === "Disable"; }).to(off);
off.on(String).when(function (trigger) { return trigger === "Enable"; }).to(history);
on.on(String).when(function (trigger) { return trigger === "DestroyInput"; }).to(clean);
off.on(String).when(function (trigger) { return trigger === "DestroyInput"; }).to(clean);
clean.to(final);
idle.to(moveItem).when(function (trigger) { return trigger === "TransformInput"; }).on(String);
moveItem.on(String).when(function (trigger) { return trigger === "ReleaseInput"; }).to(idle);
idle.on(String).to(showMoveItemPattern).when(function (trigger) { return trigger === "ReleaseInput"; });
showMoveItemPattern.on(String).when(function (trigger) { return trigger === "ReleaseInput"; }).to(hideMoveItemPattern);
hideMoveItemPattern.to(idle);
var instance = new state.Instance("florent", model);
instance.evaluate("Disable");
instance.evaluate("Enable");
